class DrawCharacterScreen extends THREE.Group{constructor(e){super(),this.bind=createBinder(this),this.drawingSpace=new DrawSpace(640,480),window.addEventListener("mousedown",this.bind("mouseDown")),window.addEventListener("mouseup",this.bind("mouseUp")),window.addEventListener("mousemove",this.bind("mouseMove")),this.add(this.drawingSpace.getMesh())}dispose(){this.parent.remove(this),this.remove(this.drawingSpace.getMesh()),this.drawingSpace.dispose(),window.removeEventListener("mousedown",this.bind("mouseDown")),window.removeEventListener("mouseup",this.bind("mouseUp")),window.removeEventListener("mousemove",this.bind("mouseMove"))}mouseDown(e){var s=screenToWorld(e.pageX,e.pageY);inside(s.toArray(),this.drawingSpace.canvasMesh.geometry.vertices.map(e=>e.toArray()))&&disableScroll(),this.drawingSpace.startDrawing(s.x,s.y)}mouseMove(e){var s=screenToWorld(e.pageX,e.pageY);this.drawingSpace.draw(s.x,s.y)}mouseUp(e){enableScroll();var s=screenToWorld(e.pageX,e.pageY);this.drawingSpace.stopDrawing(s.x,s.y)}async submitCharacter(){game.playerBlob=await this.drawingSpace.createBlob(),game.startGame()}}
class DrawSpace{constructor(e,t){this.stage=new createjs.Stage(document.createElement("canvas")),this.stage.canvas.width=e,this.stage.canvas.height=t,this.texture=new THREE.Texture(this.stage.canvas),this.geometry=this.geometry=new THREE.BoxGeometry(this.stage.canvas.width,this.stage.canvas.height,.1),this.material=new THREE.MeshBasicMaterial({map:this.texture,transparent:!0}),this.drawing=new createjs.Shape,this.stage.addChild(this.drawing),this.pen={color:"#ff00ff",size:10},this.stopDrawing(),this.stage.update(),this.texture.needsUpdate=!0}setSize(e,t){this.stage.canvas.width=t,this.stage.canvas.height=e}startDrawing(e,t){this.pen.active=!0,this.draw(e,t)}stopDrawing(e,t){!this.pen.moved&&e&&t&&this.draw(e,t),this.pen.active=!1,this.pen.moved=!1,this.pen.x=this.pen.y=null}draw(e,t){e=this.stage.canvas.width/2+e,t=this.stage.canvas.height/2-t,this.pen.active&&(this.pen.x&&(this.moved=!0,this.drawing.graphics.beginStroke(this.pen.color).setStrokeStyle(this.pen.size,"round").moveTo(this.pen.x||e,this.pen.y||t).lineTo(e,t),this.stage.update(),this.texture.needsUpdate=!0),this.pen.x=e,this.pen.y=t)}getMesh(){if(this.canvasMesh)return this.canvasMesh;var e=new THREE.Mesh(new THREE.BoxGeometry(this.stage.canvas.width,this.stage.canvas.height,1),new THREE.MeshBasicMaterial({color:"white"})),t=new THREE.Mesh(this.geometry,this.material);return e.add(t),t.position.set(0,0,e.scale.z/2+t.scale.z/2),this.drawingMesh=t,this.canvasMesh=e,e}async createBlob(){return new Promise((e,t)=>{this.stage.canvas.toBlob(e,"image/png",1)})}dispose(){this.stage.removeAllChildren(),this.stage.removeAllEventListeners(),this.stage._eventListeners=null,game.scene.remove(this.canvasMesh)}}
class Game{constructor(){this.bind=createBinder(this),this.touchHandler=new TouchHandler,this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,0,400),this.camera.lookAt(0,0,0);var e=new THREE.SpotLight(16777215);e.position.set(600,600,600),this.scene.add(e),window.addEventListener("onresize",this.bind("windowResize"))}startGame(){this.dialogue&&this.dialogue.dispose(),this.world=new WorldScreen,this.scene.add(this.world),this.playerBlob&&(this.player=this.world.addPlayer(0,"Player",this.playerBlob))}createCharacter(){this.dialogue=new DrawCharacterScreen,this.scene.add(this.dialogue)}windowResize(){var e=window.innerWidth,i=window.innerHeight;this.renderer&&(this.renderer.setSize(e,i),this.camera.aspect=e/i,this.camera.updateProjectionMatrix())}screenToWorld(e,i,r=0){var t=new THREE.Vector3,n=new THREE.Vector3;t.set(e/window.innerWidth*2-1,-i/window.innerHeight*2+1,.5),t.unproject(this.camera),t.sub(this.camera.position).normalize();var s=(r-this.camera.position.z)/t.z;return n.copy(this.camera.position).add(t.multiplyScalar(s)),n}update(){requestAnimationFrame(this.bind("update")),this.world&&this.world.update(),this.renderer.render(this.scene,this.camera)}}
class Player extends THREE.Group{constructor(e,t,s){super(),this.playerId=e,this.name=t;var i=new Image;this.image=i,this.speed=4,i.src=URL.createObjectURL(s);var a=new THREE.Texture;this.texture=a,i.onload=function(){a.image=i,a.needsUpdate=!0,n.scale.set(100*i.width/i.height,100,1)};var n=new THREE.Mesh(new THREE.PlaneGeometry(1,1,1),new THREE.MeshBasicMaterial({map:a,transparent:!0}));this.mesh=n,this.add(n),this.destination=new THREE.Vector3,this.destination.copy(this.position)}update(){var e=new THREE.Vector3;e.copy(this.destination).sub(this.position),e.length()>this.speed&&e.normalize().multiplyScalar(this.speed),this.position.add(e)}moveTo(e,t){this.destination.set(e,t,0)}}
var keys={37:1,38:1,39:1,40:1};function preventDefault(e){e.preventDefault()}function preventDefaultForScrollKeys(e){if(keys[e.keyCode])return preventDefault(e),!1}var supportsPassive=!1;try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function(){supportsPassive=!0}}))}catch(e){}var wheelOpt=!!supportsPassive&&{passive:!1},wheelEvent="onwheel"in document.createElement("div")?"wheel":"mousewheel";function disableScroll(){window.addEventListener("DOMMouseScroll",preventDefault,!1),window.addEventListener(wheelEvent,preventDefault,wheelOpt),window.addEventListener("touchmove",preventDefault,wheelOpt)}function enableScroll(){window.removeEventListener("DOMMouseScroll",preventDefault,!1),window.removeEventListener(wheelEvent,preventDefault,wheelOpt),window.removeEventListener("touchmove",preventDefault,wheelOpt),window.removeEventListener("keydown",preventDefaultForScrollKeys,!1)}
class TouchHandler{constructor(){this.bind=createBinder(this),window.addEventListener("touchstart",this.bind("touchStart")),window.addEventListener("touchmove",this.bind("touchMove")),window.addEventListener("touchcancel",this.bind("touchEnd")),window.addEventListener("touchend",this.bind("touchEnd")),this.lastTouches=[]}touchStart(o){Array(...o.touches).forEach(o=>{window.onmousedown&&window.onmousedown(o),window.dispatchEvent(new MouseEvent("mousedown",o))}),this.lastTouches=Array(...o.touches)}touchMove(o){Array(...o.touches).forEach(o=>{window.onmousedown&&window.onmousemove(o),window.dispatchEvent(new MouseEvent("mousemove",o))}),this.lastTouches=Array(...o.touches)}touchEnd(o){var t=Array(...o.touches);0==o.touches.length&&(t=this.lastTouches),t.forEach(o=>{window.onmousedown&&window.onmouseup(o),window.dispatchEvent(new MouseEvent("mouseup",o))}),this.lastTouches=Array(...o.touches)}}
function screenToWorld(n,e,r=0){var i=new THREE.Vector3,t=new THREE.Vector3;i.set(n/window.innerWidth*2-1,-e/window.innerHeight*2+1,.5),i.unproject(game.camera),i.sub(game.camera.position).normalize();var o=(r-game.camera.position.z)/i.z;return t.copy(game.camera.position).add(i.multiplyScalar(o)),t}function createBinder(n){return function(n,...e){return this[n].bind(this,...e)}.bind(n)}function blobFromBytes(n){return new Blob([n.buffer],{type:"image/png"})}function inside(n,e){for(var r=n[0],i=n[1],t=!1,o=0,a=e.length-1;o<e.length;a=o++){var c=e[o][0],u=e[o][1],m=e[a][0],d=e[a][1];u>i!=d>i&&r<(m-c)*(i-u)/(d-u)+c&&(t=!t)}return t}
class WorldScreen extends THREE.Group{constructor(){super(),this.bind=createBinder(this),this.players={},window.addEventListener("mousedown",this.bind("mouseDown"))}update(){Object.values(this.players).forEach(e=>e.update())}mouseDown(e){var s=screenToWorld(e.pageX,e.pageY);game.player.moveTo(s.x,s.y,0)}addPlayer(e,s,r){if(!this.players[e])return this.players[e]=new Player(e,s,r),this.add(this.players[e]),this.players[e]}}
//# sourceMappingURL=game.min.js.map
