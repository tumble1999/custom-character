class DrawCharacterScreen{constructor(o){this.bind=createBinder(this),this.drawingSpace=new DrawSpace(640,480),window.ontouchstart=this.bind("touchStart"),window.ontouchmove=this.bind("touchMove"),window.ontouchcancel=window.ontouchend=this.bind("touchEnd"),window.onmousedown=this.bind("mouseDown"),window.onmouseup=this.bind("mouseUp"),window.onmousemove=this.bind("mouseMove"),o.add(this.drawingSpace.createMesh())}destroy(){this.drawingSpace.destroy(),window.ontouchstart=window.ontouchmove=window.ontouchcancel=window.onmousedown=window.onmouseup=window.onmousemove=void 0}touchStart(o){Array(...o.touches).forEach(this.mouseDown)}touchMove(o){Array(...o.touches).forEach(this.mouseMove)}touchEnd(o){0==o.touches.length&&this.drawingSpace.stopDrawing(),Array(...o.touches).forEach(this.mouseUp)}mouseDown(o){var e=screenToWorld(o.pageX,o.pageY);this.drawingSpace.startDrawing(e.x,e.y)}mouseMove(o){var e=screenToWorld(o.pageX,o.pageY);this.drawingSpace.draw(e.x,e.y)}mouseUp(o){var e=screenToWorld(o.pageX,o.pageY);this.drawingSpace.stopDrawing(e.x,e.y)}async submitCharacter(){game.playerBlob=await this.drawingSpace.createBlob(),game.startGame()}}
class DrawSpace{constructor(e,t){this.stage=new createjs.Stage(document.createElement("canvas")),this.stage.canvas.width=e,this.stage.canvas.height=t,this.texture=new THREE.Texture(this.stage.canvas),this.geometry=this.geometry=new THREE.BoxGeometry(this.stage.canvas.width,this.stage.canvas.height,.1),this.material=new THREE.MeshBasicMaterial({map:this.texture,transparent:!0}),this.drawing=new createjs.Shape,this.stage.addChild(this.drawing),this.pen={color:"#ff00ff",size:10},this.stopDrawing(),this.stage.update(),this.texture.needsUpdate=!0}setSize(e,t){this.stage.canvas.width=t,this.stage.canvas.height=e}startDrawing(e,t){this.pen.active=!0,this.draw(e,t)}stopDrawing(e,t){!this.pen.moved&&e&&t&&this.draw(e,t),this.pen.active=!1,this.pen.moved=!1,this.pen.x=this.pen.y=null}draw(e,t){e=this.stage.canvas.width/2+e,t=this.stage.canvas.height/2-t,this.pen.active&&(this.pen.x&&(this.moved=!0,this.drawing.graphics.beginStroke(this.pen.color).setStrokeStyle(this.pen.size,"round").moveTo(this.pen.x||e,this.pen.y||t).lineTo(e,t),this.stage.update(),this.texture.needsUpdate=!0),this.pen.x=e,this.pen.y=t)}createMesh(){if(this.canvasMesh)return this.canvasMesh;var e=new THREE.Mesh(new THREE.BoxGeometry(this.stage.canvas.width,this.stage.canvas.height,1),new THREE.MeshBasicMaterial({color:"white"})),t=new THREE.Mesh(this.geometry,this.material);return e.add(t),t.position.set(0,0,e.scale.z/2+t.scale.z/2),this.drawingMesh=t,this.canvasMesh=e,e}async createBlob(){return new Promise((e,t)=>{this.stage.canvas.toBlob(e,"image/png",1)})}destroy(){this.stage.removeAllChildren(),this.stage.removeAllEventListeners(),this.stage.canvas=null,this.stage._eventListeners=null,game.scene.remove(this.canvasMesh)}}
class Game{constructor(){this.bind=createBinder(this),this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,0,400),this.camera.lookAt(0,0,0),window.onresize=this.bind("windowResize");var e=new THREE.SpotLight(16777215);e.position.set(600,600,600),this.scene.add(e)}startGame(){this.state&&this.state.destroy(),this.state=new WorldScreen,this.playerBlob&&this.state.addPlayer(0,"Player",this.playerBlob)}createCharacter(){this.state&&this.state.destroy(),this.state=new DrawCharacterScreen(this.scene)}submitCharacter(){game.state.submitCharacter()}windowResize(){var e=window.innerWidth,t=window.innerHeight;this.renderer&&(this.renderer.setSize(e,t),this.camera.aspect=e/t,this.camera.updateProjectionMatrix())}screenToWorld(e,t,i=0){var r=new THREE.Vector3,n=new THREE.Vector3;r.set(e/window.innerWidth*2-1,-t/window.innerHeight*2+1,.5),r.unproject(this.camera),r.sub(this.camera.position).normalize();var s=(i-this.camera.position.z)/r.z;return n.copy(this.camera.position).add(r.multiplyScalar(s)),n}update(){requestAnimationFrame(this.bind("update")),this.renderer.render(this.scene,this.camera)}}
class Player{constructor(e,t,a){this.id=e,this.name=t;var n=new Image;n.src=URL.createObjectURL(a),window.document.body.appendChild(n);var s=new THREE.Texture;this.texture=s,n.onload=function(){s.image=n,s.needsUpdate=!0},this.mesh=new THREE.Mesh(new THREE.BoxGeometry(100*n.width/n.height,100,.1),new THREE.MeshBasicMaterial({map:this.texture,transparent:!0}))}}
function screenToWorld(e,n,r=0){var i=new THREE.Vector3,t=new THREE.Vector3;i.set(e/window.innerWidth*2-1,-n/window.innerHeight*2+1,.5),i.unproject(game.camera),i.sub(game.camera.position).normalize();var o=(r-game.camera.position.z)/i.z;return t.copy(game.camera.position).add(i.multiplyScalar(o)),t}function createBinder(e){return function(e,...n){return this[e].bind(this,...n)}.bind(e)}function blobFromBytes(e){return new Blob([e.buffer],{type:"image/png"})}
class WorldScreen{constructor(){this.players={}}addPlayer(r,s,e){if(!this.players[r])return this.players[r]=new Player(r,s,e),this.players[r]}destroy(){}}
//# sourceMappingURL=game.min.js.map
