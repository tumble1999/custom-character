class App extends PIXI.Application{constructor(i,t,d){super({width:i,height:t,backgroundColor:d,resolution:window.devicePixelRatio||1})}domElement(){return this.view}addChild(i){this.stage.addChild(i)}onUpdate(i){this.ticker.add(i)}}
class Button extends PIXI.Container{constructor({text:t,action:i=function(){},color:h="white",margin:e=10}){super(),this.box=PIXI.Sprite.from(PIXI.Texture.WHITE),this.box.tint=GameColors[h],this.addChild(this.box),this.text=new PIXI.Text(t,{fill:GameColors.white}),this.addChild(this.text),this.text.x=e,this.text.y=e/2,this.box.width=this.text.width+2*e,this.box.height=this.text.height+e,this.buttonMode=!0,this.interactive=!0,this.on("tap",i),this.on("click",i),this.hitArea=new PIXI.Rectangle(0,0,this.box.width,this.box.height)}}
class DrawCharacterScreen extends PIXI.Container{constructor(e){super(),this.bind=createBinder(this),this.drawingSpace=new DrawSpace(100,100),centerTo(this.drawingSpace,game.getScreen()),this.addChild(this.drawingSpace),this.margin=50/1080*window.innerHeight,this.title=new BorderText(e,{fill:GameColors.white,fontSize:50}),this.addChild(this.title),centerTo(this.title,game.getScreen()),this.title.y=this.margin,this.submit=new Button({text:"Submit",action:game.bind("startGame"),color:"green",margin:20}),centerTo(this.submit,game.getScreen()),this.submit.y=game.getScreen().height-this.margin-this.submit.height,this.addChild(this.submit)}update(e){this.drawingSpace.update(),this.margin=50/1080*window.innerHeight,centerTo(this.title,game.getScreen()),this.title.y=this.margin,centerTo(this.drawingSpace,game.getScreen()),centerTo(this.submit,game.getScreen()),this.submit.y=game.getScreen().height-this.margin-this.submit.height}destroy(e){super.destroy(e),this.drawingSpace.destroy()}localisePos(e,t){return[e-this.x-this.drawingSpace.x,t-this.y-this.drawingSpace.y]}mouseDown(e){this&&this.drawingSpace.startDrawing(...this.localisePos(e.pageX,e.pageY))}mouseMove(e){this&&this.drawingSpace.draw(...this.localisePos(e.pageX,e.pageY))}mouseUp(e){this&&(enableScroll(),this.drawingSpace.stopDrawing())}}
class DrawSpace extends PIXI.Container{constructor(t,e){super(),this.stage=new createjs.Stage(document.createElement("canvas")),this.stage.canvas.width=t,this.stage.canvas.height=e,this.background=PIXI.Sprite.from(PIXI.Texture.WHITE),this.background.width=t,this.background.height=e,this.addChild(this.background),this.sprite=new PIXI.Sprite(PIXI.Texture.from(this.stage.canvas)),this.addChild(this.sprite),this.drawing=new createjs.Shape,this.stage.addChild(this.drawing),this.pen={color:"#ff00ff",size:2},this.stopDrawing(),this.stage.update(),this.width=500,this.height=this.width*e/t}setSize(t,e){this.stage.canvas.width=e,this.stage.canvas.height=t}startDrawing(t,e){this.pen.active=!0,this.draw(t,e)}stopDrawing(t,e){!this.pen.moved&&t&&e&&this.draw(t,e),this.pen.active=!1,this.pen.moved=!1,this.pen.x=this.pen.y=null}draw(t,e){t/=5,e/=5,this.pen.active&&(this.pen.x&&(this.moved=!0,this.drawing.graphics.beginStroke(this.pen.color).setStrokeStyle(this.pen.size,"round").moveTo(this.pen.x||t,this.pen.y||e).lineTo(t,e),this.stage.update(),this.sprite.texture.update()),this.pen.x=t,this.pen.y=e)}async createBlob(){return new Promise((t,e)=>{this.stage.canvas.toBlob(t,"image/png",1)})}update(t){window.innerWidth<500?this.width=window.innerWidth:this.width=500,this.height=this.width*this.stage.canvas.height/this.stage.canvas.width}destroy(){this.stage.removeAllChildren(),this.stage.removeAllEventListeners(),this.stage._eventListeners=null}}
class Game{constructor(){this.bind=createBinder(this),this.touchHandler=new TouchHandler,this.app=new App(window.innerWidth,window.innerHeight,"#000000"),document.body.appendChild(this.app.domElement()),this.app.onUpdate(this.bind("update")),window.addEventListener("mousedown",this.bind("mouseDown")),window.addEventListener("mouseup",this.bind("mouseUp")),window.addEventListener("mousemove",this.bind("mouseMove")),window.addEventListener("resize",this.bind("windowResize"))}async startGame(){this.dialogue&&(this.playerBlob=await this.dialogue.drawingSpace.createBlob(),this.dialogue.destroy({children:!0}),delete this.dialogue),this.world=new World,this.app.addChild(this.world),this.playerBlob&&(this.player=this.world.addPlayer(0,"Player",this.playerBlob))}getScreen(){return this.app.screen}update(e){this.dialogue&&this.dialogue.update(e),this.world&&this.world.update(e)}createCharacter(){this.dialogue=new DrawCharacterScreen("Draw a character"),this.app.addChild(this.dialogue)}mouseDown(e){this.dialogue&&this.dialogue.mouseDown(e),this.world&&this.world.mouseDown(e)}mouseMove(e){this.dialogue&&this.dialogue.mouseMove(e)}mouseUp(e){this.dialogue&&this.dialogue.mouseUp(e)}windowResize(e){this.app.resizeTo=document.body,this.app.resize()}}
PIXI.settings.SCALE_MODE=PIXI.SCALE_MODES.NEAREST;
class Player extends PIXI.Sprite{constructor(t,e,i){super(PIXI.Texture.from(URL.createObjectURL(i))),this.x=game.app.screen.width/2,this.y=game.app.screen.height/2,this.playerId=t,this.name=e,this.speed=3,this.destination={x:this.x,y:this.y},this.nicknameSprite=new BorderText(e),this.addChild(this.nicknameSprite)}update(){var t=moveTowards({x:this.x,y:this.y},this.destination,this.speed);this.x=t.x,this.y=t.y,centerTo(this.nicknameSprite,this),this.nicknameSprite.y=0}moveTo(t,e){this.destination={x:t-this.width/2,y:e-3/4*this.height}}}
var GameColors={red:16711680,orange:16744192,yellow:16776960,lime:8388352,green:65280,springGreen:65407,cyan:65535,azure:32767,blue:255,violet:8323327,magenta:16711935,rose:16711807,white:16777215,grey:8421504,black:0};
var keys={37:1,38:1,39:1,40:1};function preventDefault(e){e.preventDefault()}function preventDefaultForScrollKeys(e){if(keys[e.keyCode])return preventDefault(e),!1}var supportsPassive=!1;try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function(){supportsPassive=!0}}))}catch(e){}var wheelOpt=!!supportsPassive&&{passive:!1},wheelEvent="onwheel"in document.createElement("div")?"wheel":"mousewheel";function disableScroll(){window.addEventListener("DOMMouseScroll",preventDefault,!1),window.addEventListener(wheelEvent,preventDefault,wheelOpt),window.addEventListener("touchmove",preventDefault,wheelOpt)}function enableScroll(){window.removeEventListener("DOMMouseScroll",preventDefault,!1),window.removeEventListener(wheelEvent,preventDefault,wheelOpt),window.removeEventListener("touchmove",preventDefault,wheelOpt),window.removeEventListener("keydown",preventDefaultForScrollKeys,!1)}
class BorderText extends PIXI.Text{constructor(e,s){super(e,Object.assign({fill:GameColors.white,fontSize:16,stroke:GameColors.black,strokeThickness:5},s))}}
class TouchHandler{constructor(){this.bind=createBinder(this),window.addEventListener("touchstart",this.bind("touchStart")),window.addEventListener("touchmove",this.bind("touchMove")),window.addEventListener("touchcancel",this.bind("touchEnd")),window.addEventListener("touchend",this.bind("touchEnd")),this.lastTouches=[]}touchStart(o){Array(...o.touches).forEach(o=>{window.onmousedown&&window.onmousedown(o),window.dispatchEvent(new MouseEvent("mousedown",o))}),this.lastTouches=Array(...o.touches)}touchMove(o){Array(...o.touches).forEach(o=>{window.onmousedown&&window.onmousemove(o),window.dispatchEvent(new MouseEvent("mousemove",o))}),this.lastTouches=Array(...o.touches)}touchEnd(o){var t=Array(...o.touches);0==o.touches.length&&(t=this.lastTouches),t.forEach(o=>{window.onmousedown&&window.onmouseup(o),window.dispatchEvent(new MouseEvent("mouseup",o))}),this.lastTouches=Array(...o.touches)}}
function createBinder(n){return function(n,...e){return this[n].bind(this,...e)}.bind(n)}function blobFromBytes(n){return new Blob([n.buffer],{type:"image/png"})}function centerTo(n,e){e||(e={width:0,height:0}),n.x=e.width/2-n.width/2,n.y=e.height/2-n.height/2}function lerpXY(n,e,t){return{x:n.x+t*(e.x-n.x),y:n.y+t*(e.y-n.y)}}function vec(...n){return 1==n.length?"object"==typeof n[0]?Object.values(n[0]):n[0]:n}function mag2(...n){return(n=vec(...n)).reduce((n,e)=>n+e*e,0)}function mag(...n){return Math.sqrt(mag2(...n))}function norm(...n){n=vec(...n);var e=mag(...n);return n.map(n=>n/e)}function subVec(n,e){return vec(n).map((n,t)=>n-vec(e)[t])}function addVec(n,e){return vec(n).map((n,t)=>n+vec(e)[t])}function multVec(n,e){return vec(n).map((n,t)=>n*vec(e)[t])}function divVec(n,e){return vec(n).map((n,t)=>n/vec(e)[t])}function moveTowards(n,e,t){var r=e.x-n.x,c=e.y-n.y;if(mag([r,c])>t){Math.atan2(c,r);var u=norm([r,c]);r=u[0]*t,c=u[1]*t}return{x:n.x+r,y:n.y+c}}
class World extends PIXI.Container{constructor(){super(),this.bind=createBinder(this),this.players={}}update(e){Object.values(this.players).forEach(s=>s.update(e))}mouseDown(e){game.player.moveTo(e.pageX,e.pageY,0)}addPlayer(e,s,a){if(!this.players[e])return this.players[e]=new Player(e,s,a),this.addChild(this.players[e]),this.players[e]}}
//# sourceMappingURL=game.min.js.map
